MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002 ; PICBASIC PRO(TM) Compiler 3.1.1.4, (c) 1997, 2018 ME Labs, Inc. All Rights Reserved. 
  00000001            00003 MPASMX_USED                     EQU     1
                      00004 
                      00005 #define PBP_PATH        D:\PROGRAM FILES (X86)\PBP3_1\
                      00006 
                      00007 
                      00008 
                      00009 
                      00016         LIST
                      00017         LIST p = 18F25J50, r = dec, w = -311, f = inhx32
                      00018         INCLUDE PBP_PATH\DEVICES\PIC18F25J50.MPASMINC   ; MPASM  Header
                      00001         LIST
                      00002 
                      00003 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00004 ;
                      00005 ;  File:    PIC18F25J50.MPASMINC
                      00006 ;  Date:    07/15/11
                      00007 ;
                      00008 ;  Special MPASM include for use with PICBASIC PRO(tm) Compiler
                      00009 ;
                      00010 ;  Modifications to this file in the \DEVICES folder will be overwritten when
                      00011 ;  you install future upgrades.
                      00012 ;
                      00013 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00014 
                      02014         LIST
                      00021         LIST
  00000040            00022 BLOCK_SIZE      EQU     64
                      00023 
                      00024 
                      00025 PBP_HARDWAREDEF  macro
                      00026   endm
                      00027 
                      00028 
A6 F7 18 F9 F3 F8 C0 F00029     CONFIG  WDTEN = OFF           ; Disabled
       1 
                      00030     CONFIG  PLLDIV = 5            ; Divide by 5 (20 MHz oscillator input)
                      00031     CONFIG  STVREN = ON           ; Enabled
                      00032     CONFIG  XINST = OFF           ; Disabled
                      00033     CONFIG  DEBUG = OFF           ; Disabled
                      00034     CONFIG  CPUDIV = OSC1         ; No CPU system clock divide
                      00035     CONFIG  CP0 = OFF             ; Program memory is not code-protected
                      00036     CONFIG  OSC = INTOSC          ; INTOSC
                      00037     CONFIG  T1DIG = ON            ; Secondary Oscillator clock source may be selected
                      00038     CONFIG  LPT1OSC = OFF         ; High-power operation
                      00039     CONFIG  FCMEN = OFF           ; Disabled
                      00040     CONFIG  IESO = OFF            ; Disabled
                      00041     CONFIG  WDTPS = 512           ; 1:512
                      00042     CONFIG  DSWDTOSC = INTOSCREF  ; DSWDT uses INTRC
                      00043     CONFIG  RTCOSC = T1OSCREF     ; RTCC uses T1OSC/T1CKI
                      00044     CONFIG  DSBOREN = OFF         ; Disabled
                      00045     CONFIG  DSWDTEN = OFF         ; Disabled
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00046     CONFIG  DSWDTPS = G2          ; 1:2,147,483,648 (25.7 days)
                      00047     CONFIG  IOL1WAY = OFF         ; The IOLOCK bit (PPSCON<0>) can be set once
                      00048     CONFIG  MSSP7B_EN = MSK7      ; 7 Bit address masking mode
                      00049     CONFIG  WPFP = PAGE_0         ; Write Protect Program Flash Page 0
                      00050     CONFIG  WPEND = PAGE_WPFP     ; Page WPFP<5:0> through Configuration Words erase/write protected
                      00051     CONFIG  WPCFG = OFF           ; Configuration Words page not erase/write-protected
                      00052     CONFIG  WPDIS = OFF           ; WPFP<5:0>/WPEND region ignored
                      00053 
                      00054 
                      00055 
                      00056 ; Define statements.
                      00057 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00030   DEFINE OSC 8
                      00058 #define         OSC              8
                      00059 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00032   DEFINE HSER_RCSTA 90h 
                      00060 #define         HSER_RCSTA               90h 
                      00061 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00033   DEFINE HSER_TXSTA 24h
                      00062 #define         HSER_TXSTA               24h
                      00063 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00034   DEFINE HSER_BAUD 9600 
                      00064 #define         HSER_BAUD                9600 
                      00065 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00036   DEFINE HSER2_RCSTA 90h 
                      00066 #define         HSER2_RCSTA              90h 
                      00067 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00037   DEFINE HSER2_TXSTA 24h
                      00068 #define         HSER2_TXSTA              24h
                      00069 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00038   DEFINE HSER2_BAUD 9600 
                      00070 #define         HSER2_BAUD               9600 
                      00071 
  00000000            00072 RAM_START                       EQU     00000h
  00000EBF            00073 RAM_END                         EQU     00EBFh
  0000000F            00074 RAM_BANKS                       EQU     0000Fh
  00000060            00075 BANK0_START                     EQU     00060h
  000000FF            00076 BANK0_END                       EQU     000FFh
  00000100            00077 BANK1_START                     EQU     00100h
  000001FF            00078 BANK1_END                       EQU     001FFh
  00000200            00079 BANK2_START                     EQU     00200h
  000002FF            00080 BANK2_END                       EQU     002FFh
  00000300            00081 BANK3_START                     EQU     00300h
  000003FF            00082 BANK3_END                       EQU     003FFh
  00000400            00083 BANK4_START                     EQU     00400h
  000004FF            00084 BANK4_END                       EQU     004FFh
  00000500            00085 BANK5_START                     EQU     00500h
  000005FF            00086 BANK5_END                       EQU     005FFh
  00000600            00087 BANK6_START                     EQU     00600h
  000006FF            00088 BANK6_END                       EQU     006FFh
  00000700            00089 BANK7_START                     EQU     00700h
  000007FF            00090 BANK7_END                       EQU     007FFh
  00000800            00091 BANK8_START                     EQU     00800h
  000008FF            00092 BANK8_END                       EQU     008FFh
  00000900            00093 BANK9_START                     EQU     00900h
  000009FF            00094 BANK9_END                       EQU     009FFh
  00000A00            00095 BANK10_START                    EQU     00A00h
  00000AFF            00096 BANK10_END                      EQU     00AFFh
  00000B00            00097 BANK11_START                    EQU     00B00h
  00000BFF            00098 BANK11_END                      EQU     00BFFh
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000C00            00099 BANK12_START                    EQU     00C00h
  00000CFF            00100 BANK12_END                      EQU     00CFFh
  00000D00            00101 BANK13_START                    EQU     00D00h
  00000DFF            00102 BANK13_END                      EQU     00DFFh
  00000E00            00103 BANK14_START                    EQU     00E00h
  00000EBF            00104 BANK14_END                      EQU     00EBFh
  00000000            00105 BANKA_START                     EQU     00000h
  0000005F            00106 BANKA_END                       EQU     0005Fh
                      00107 
                      00108 ; D:\PROGRAM FILES (X86)\PBP3_1\PBPPIC18.RAM    00028   A00000  FLAGS   VAR     BYTE BANKA SYSTEM       
                            ' Static flags
  00000000            00109 FLAGS                           EQU     RAM_START + 000h
                      00110 ; D:\PROGRAM FILES (X86)\PBP3_1\PBPPIC18.RAM    00027   A00001  GOP     VAR     BYTE BANKA SYSTEM       
                            ' Gen Op Parameter
  00000001            00111 GOP                             EQU     RAM_START + 001h
                      00112 ; D:\PROGRAM FILES (X86)\PBP3_1\PBPPIC18.RAM    00012   A00002  R0      VAR     WORD BANKA SYSTEM       
                            ' System Register
  00000002            00113 R0                              EQU     RAM_START + 002h
                      00114 ; D:\PROGRAM FILES (X86)\PBP3_1\PBPPIC18.RAM    00013   A00004  R1      VAR     WORD BANKA SYSTEM       
                            ' System Register
  00000004            00115 R1                              EQU     RAM_START + 004h
                      00116 ; D:\PROGRAM FILES (X86)\PBP3_1\PBPPIC18.RAM    00014   A00006  R2      VAR     WORD BANKA SYSTEM       
                            ' System Register
  00000006            00117 R2                              EQU     RAM_START + 006h
                      00118 ; D:\PROGRAM FILES (X86)\PBP3_1\PBPPIC18.RAM    00015   A00008  R3      VAR     WORD BANKA SYSTEM       
                            ' System Register
  00000008            00119 R3                              EQU     RAM_START + 008h
                      00120 ; D:\PROGRAM FILES (X86)\PBP3_1\PBPPIC18.RAM    00016   A0000A  R4      VAR     WORD BANKA SYSTEM       
                            ' System Register
  0000000A            00121 R4                              EQU     RAM_START + 00Ah
                      00122 ; D:\PROGRAM FILES (X86)\PBP3_1\PBPPIC18.RAM    00017   A0000C  R5      VAR     WORD BANKA SYSTEM       
                            ' System Register
  0000000C            00123 R5                              EQU     RAM_START + 00Ch
                      00124 ; D:\PROGRAM FILES (X86)\PBP3_1\PBPPIC18.RAM    00018   A0000E  R6      VAR     WORD BANKA SYSTEM       
                            ' System Register
  0000000E            00125 R6                              EQU     RAM_START + 00Eh
                      00126 ; D:\PROGRAM FILES (X86)\PBP3_1\PBPPIC18.RAM    00019   A00010  R7      VAR     WORD BANKA SYSTEM       
                            ' System Register
  00000010            00127 R7                              EQU     RAM_START + 010h
                      00128 ; D:\PROGRAM FILES (X86)\PBP3_1\PBPPIC18.RAM    00020   A00012  R8      VAR     WORD BANKA SYSTEM       
                            ' System Register
  00000012            00129 R8                              EQU     RAM_START + 012h
                      00130 ; D:\PROGRAM FILES (X86)\PBP3_1\PBPPIC18.RAM    00023   A00014  RM1     VAR     BYTE BANKA SYSTEM       
                            ' Pin 1 Mask
  00000014            00131 RM1                             EQU     RAM_START + 014h
                      00132 ; D:\PROGRAM FILES (X86)\PBP3_1\PBPPIC18.RAM    00026   A00015  RM2     VAR     BYTE BANKA SYSTEM       
                            ' Pin 2 Mask
  00000015            00133 RM2                             EQU     RAM_START + 015h
                      00134 ; D:\PROGRAM FILES (X86)\PBP3_1\PBPPIC18.RAM    00021   A00016  RR1     VAR     BYTE BANKA SYSTEM       
                            ' Pin 1 Register
  00000016            00135 RR1                             EQU     RAM_START + 016h
                      00136 ; D:\PROGRAM FILES (X86)\PBP3_1\PBPPIC18.RAM    00024   A00017  RR2     VAR     BYTE BANKA SYSTEM       
                            ' Pin 2 Register
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000017            00137 RR2                             EQU     RAM_START + 017h
                      00138 ; D:\PROGRAM FILES (X86)\PBP3_1\PBPPIC18.RAM    00022   A00018  RS1     VAR     BYTE BANKA SYSTEM       
                            ' Pin 1 Bank
  00000018            00139 RS1                             EQU     RAM_START + 018h
                      00140 ; D:\PROGRAM FILES (X86)\PBP3_1\PBPPIC18.RAM    00025   A00019  RS2     VAR     BYTE BANKA SYSTEM       
                            ' Pin 2 Bank
  00000019            00141 RS2                             EQU     RAM_START + 019h
                      00142 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00040   A0001A  Ud var byte
  0000001A            00143 _Ud                             EQU     RAM_START + 01Ah
                      00144 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00380   PORTL   VAR     PORTB
  00000F81            00145 _PORTL                          EQU      PORTB
                      00146 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00381   PORTH   VAR     PORTC
  00000F82            00147 _PORTH                          EQU      PORTC
                      00148 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00382   TRISL   VAR     TRISB
  00000F93            00149 _TRISL                          EQU      TRISB
                      00150 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00383   TRISH   VAR     TRISC
  00000F94            00151 _TRISH                          EQU      TRISC
                      00152 #define _RCSTA2??7               RCSTA2, 007h
                      00153 
                      00154 ; Constants.
  00000400            00155 _USBMEMORYADDRESS               EQU     00400h
                      00156 
                      00157 ; EEPROM data.
                      00158 
                      00159 
                      00160         INCLUDE "25J50_PPS_TEST.MAC"
                      00001 
                      00045         LIST
                      00161         INCLUDE "D:\PROGRAM FILES (X86)\PBP3_1\PBPPIC18.LIB"
                      00001 ;******************************************************************
                      00002 ;*  PBPPIC18.LIB                                                  *
                      00003 ;*                                                                *
                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer, Darrel Taylor,     *
                      00005 ;*              Charles Leo                                       *
                      00006 ;*  Notice    : Copyright (c) 2017 microEngineering Labs, Inc.    *
                      00007 ;*              All Rights Reserved                               *
                      00008 ;*  Date      : 03/27/2017                                        *
                      00009 ;*  Version   : 3.1.0                                             *
                      00010 ;*  Notes     :                                                   *
                      00011 ;******************************************************************
                      00069   LIST
                      00070 ; Oscillator is 8MHz
                      01228   LIST
000000                01229     ORG RESET_ORG               ; Reset vector at 0
                      01238   LIST
000000 EF25 F000      01239         goto    INIT            ; Finish initialization
                      02488   LIST
000004 010F           02489 HSERIN  movlb   15              ; Set bank select to 15 to pick up any SFRs not in Access bank
                      02490       ifdef HSER_CLROERR
                      02491         btfsc   RCSTA, OERR     ; Check for overflow error
                      02492         bcf     RCSTA, CREN     ; Toggle continuous receive to clear error
                      02493         bsf     RCSTA, CREN
                      02494       endif
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02495 hserinloop CLRWDT?NOP           ; Keep Watchdog timer clear
                          M     ifndef NO_CLRWDT
000006 0004               M         clrwdt
                          M     else
                          M         nop
                          M     endif
000008 AA9E           02496         btfss   PIR, RCIF       ; Check for char
00000A D7FD           02497         bra     hserinloop      ; Loop till char
                      02503   LIST
00000C                02504 HSERINX
                      02505       ifdef HSERPARITY_USED
                      02506           if ((HSER_BITS) == 9)
                      02507         rrcf    RCSTA, W        ; Shuffle 9th bit to R4.0
                      02508         rlcf    R4, F           ; (Ends up in R4.1)
                      02509           endif
                      02510       endif
                      02511 
00000C 50AF           02512         movf    RCREG, W        ; Get the char
                      02513 
                      02514       ifdef HSERPARITY_USED
                      02515         rcall   HSERPARITY      ; Calculate the parity
                      02516         rrcf    GOP, F          ; Shuffle parity bit from GOP.0 to R4.0
                      02517         rlcf    R4, F
                      02518           if ((HSER_BITS) != 9)
                      02519         andlw   7fh             ; Get rid of the parity bit
                      02520           else
                      02521         btfsc   R4, 1           ; Add in 9th bit, saved earlier
                      02522         incf    R4, F
                      02523           endif
                      02524           ifdef HSER_ODD
                      02525         incf    R4, F
                      02526           endif
                      02527       endif
                      02528 
00000E 80D8           02529         bsf     STATUS, C       ; Indicate not timed out (C set)
000010 EF22 F000      02530 hserindone goto DUNN            ; That's it
                      02611   LIST
000014 010F           02612 HSEROUT movlb   15              ; Set bank select to 15 to pick up any SFRs not in Access bank
                      02613 hseroutloop CLRWDT?             ; Keep Watchdog clear
                          M     ifndef NO_CLRWDT
000016 0004               M         clrwdt
                          M     endif
000018 A89E           02614         btfss   PIR, TXIF       ; Wait till ready
00001A D7FD           02615         bra     hseroutloop
                      02616 
                      02617       ifdef HSERPARITY_USED
                      02618           if (HSER_BITS != 9)
                      02619         andlw   7fh             ; Clear top bit
                      02620         rcall   HSERPARITY      ; Calculate the parity
                      02621             ifdef HSER_ODD
                      02622         btfss   GOP, 0
                      02623             else
                      02624         btfsc   GOP, 0
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02625             endif
                      02626         iorlw   80h             ; Set parity
                      02627           else
                      02628         rcall   HSERPARITY      ; Calculate the parity
                      02629         bcf     TXSTA, TX9D     ; Start parity at 0
                      02630             ifdef HSER_ODD
                      02631         btfss   GOP, 0
                      02632             else
                      02633         btfsc   GOP, 0
                      02634             endif
                      02635         bsf     TXSTA, TX9D     ; Set parity in 9th bit
                      02636           endif
                      02637       endif
                      02638 
00001C 6EAE           02639         movwf   TXREG           ; Send the char
00001E 80D8           02640         bsf     STATUS, C       ; Set no timeout for Serout2mod
000020 EF22 F000      02641         goto    DUNN            ; That's it
                      02713   LIST
000024 010F           02714 HSERIN2 movlb   15              ; Set bank select to 15 to pick up any SFRs not in Access bank
                      02715       ifdef HSER2_CLROERR
                      02716         btfsc   RCSTA2, OERR    ; Check for overflow error
                      02717         bcf     RCSTA2, CREN    ; Toggle continuous receive to clear error
                      02718         bsf     RCSTA2, CREN
                      02719       endif
                      02720 hserin2loop CLRWDT?NOP          ; Keep Watchdog timer clear
                          M     ifndef NO_CLRWDT
000026 0004               M         clrwdt
                          M     else
                          M         nop
                          M     endif
000028 AAA4           02721         btfss   PIR3, RC2IF     ; Check for char
00002A D7FD           02722         bra     hserin2loop     ; Loop till char
                      02728   LIST
00002C                02729 HSERIN2X
                      02730       ifdef HSER2PARITY_USED
                      02731           if ((HSER2_BITS) == 9)
                      02732         rrcf    RCSTA2, W       ; Shuffle 9th bit to R4.0
                      02733         rlcf    R4, F           ; (Ends up in R4.1)
                      02734           endif
                      02735       endif
                      02736 
00002C 50AA           02737         movf    RCREG2, W        ; Get the char
                      02738 
                      02739       ifdef HSER2PARITY_USED
                      02740         rcall   HSER2PARITY     ; Calculate the parity
                      02741         rrcf    GOP, F          ; Shuffle parity bit from GOP.0 to R4.0
                      02742         rlcf    R4, F
                      02743           if ((HSER2_BITS) != 9)
                      02744         andlw   7fh             ; Get rid of the parity bit
                      02745           else
                      02746         btfsc   R4, 1           ; Add in 9th bit, saved earlier
                      02747         incf    R4, F
                      02748           endif
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02749           ifdef HSER2_ODD
                      02750         incf    R4, F
                      02751           endif
                      02752       endif
                      02753 
00002E 80D8           02754         bsf     STATUS, C       ; Indicate not timed out (C set)
000030 EF22 F000      02755 hserin2done goto DUNN           ; That's it
                      02836   LIST
000034 010F           02837 HSEROUT2 movlb  15              ; Set bank select to 15 to pick up any SFRs not in Access bank
                      02838 hserout2loop CLRWDT?            ; Keep Watchdog clear
                          M     ifndef NO_CLRWDT
000036 0004               M         clrwdt
                          M     endif
000038 A8A4           02839         btfss   PIR3, TX2IF     ; Wait till ready
00003A D7FD           02840         bra     hserout2loop
                      02841 
                      02842       ifdef HSER2PARITY_USED
                      02843           if (HSER2_BITS != 9)
                      02844         andlw   7fh             ; Clear top bit
                      02845         rcall   HSER2PARITY     ; Calculate the parity
                      02846             ifdef HSER2_ODD
                      02847         btfss   GOP, 0
                      02848             else
                      02849         btfsc   GOP, 0
                      02850             endif
                      02851         iorlw   80h             ; Set parity
                      02852           else
                      02853         rcall   HSER2PARITY     ; Calculate the parity
                      02854         bcf     TXSTA2, TX9D    ; Start parity at 0
                      02855             ifdef HSER2_ODD
                      02856         btfss   GOP, 0
                      02857             else
                      02858         btfsc   GOP, 0
                      02859             endif
                      02860         bsf     TXSTA2, TX9D    ; Set parity in 9th bit
                      02861           endif
                      02862       endif
                      02863 
00003C 6EA9           02864         movwf   TXREG2          ; Send the char
00003E 80D8           02865         bsf     STATUS, C       ; Set no timeout for Serout2mod
000040 EF22 F000      02866         goto    DUNN            ; That's it
                      08079   LIST
000044 0100           08080 DUNN    movlb   0               ; 1 Reset banks to 0
                      08081 DUNN5   CLRWDT?NOP              ; 1 Hit Watchdog timer
                          M     ifndef NO_CLRWDT
000046 0004               M         clrwdt
                          M     else
                          M         nop
                          M     endif
000048 0012           08082         return                  ; 2 Done
                      08095   LIST
00004A                08096 INIT
                      08099   LIST
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08100         MOVE?CB HSER_SPBRG, SPBRG       ; Set baud rate generator reg
                          M         CHK?RP  SPBRG
                          M     if (((SPBRG) & 8000h) != PREV_ALT)
                          M       if ((SPBRG) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (SPBRG) & 8000h
                          M     endif
                          M     if ((((SPBRG) & 0fffh) > BANKA_END) & (((SPBRG) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((SPBRG) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (SPBRG)
                          M PREV_BANK = high (SPBRG)
                          M       endif
                          M     endif
                          M     if (low (HSER_SPBRG) == 0)
                          M         clrf    SPBRG
                          M     else
                          M       if (low (HSER_SPBRG) == 255)
                          M         setf    SPBRG
                          M       else
00004A 0E33               M         movlw   low (HSER_SPBRG)
00004C 6EB0               M         movwf   SPBRG
                          M       endif
                          M     endif
                      08101     ifdef HSER_SPBRGH
                      08102       ifdef SPBRGH
                      08103         MOVE?CB HSER_SPBRGH, SPBRGH     ; Set baud rate generator reg high
                      08104       endif
                      08105     endif
                      08106         MOVE?CB HSER_TXSTA, TXSTA       ; Set transmit control reg
                          M         CHK?RP  TXSTA
                          M     if (((TXSTA) & 8000h) != PREV_ALT)
                          M       if ((TXSTA) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (TXSTA) & 8000h
                          M     endif
                          M     if ((((TXSTA) & 0fffh) > BANKA_END) & (((TXSTA) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((TXSTA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TXSTA)
                          M PREV_BANK = high (TXSTA)
                          M       endif
                          M     endif
                          M     if (low (24h) == 0)
                          M         clrf    TXSTA
                          M     else
                          M       if (low (24h) == 255)
                          M         setf    TXSTA
                          M       else
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00004E 0E24               M         movlw   low (24h)
000050 6EAD               M         movwf   TXSTA
                          M       endif
                          M     endif
                      08107         MOVE?CB HSER_RCSTA, RCSTA       ; Set receive control reg
                          M         CHK?RP  RCSTA
                          M     if (((RCSTA) & 8000h) != PREV_ALT)
                          M       if ((RCSTA) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RCSTA) & 8000h
                          M     endif
                          M     if ((((RCSTA) & 0fffh) > BANKA_END) & (((RCSTA) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RCSTA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RCSTA)
                          M PREV_BANK = high (RCSTA)
                          M       endif
                          M     endif
                          M     if (low (90h) == 0)
                          M         clrf    RCSTA
                          M     else
                          M       if (low (90h) == 255)
                          M         setf    RCSTA
                          M       else
000052 0E90               M         movlw   low (90h)
000054 6EAC               M         movwf   RCSTA
                          M       endif
                          M     endif
                      08111   LIST
                      08112         MOVE?CB HSER2_SPBRG, SPBRG2     ; Set baud rate generator reg
                          M         CHK?RP  SPBRG2
                          M     if (((SPBRG2) & 8000h) != PREV_ALT)
                          M       if ((SPBRG2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (SPBRG2) & 8000h
                          M     endif
                          M     if ((((SPBRG2) & 0fffh) > BANKA_END) & (((SPBRG2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((SPBRG2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (SPBRG2)
                          M PREV_BANK = high (SPBRG2)
                          M       endif
                          M     endif
                          M     if (low (HSER2_SPBRG) == 0)
                          M         clrf    SPBRG2
                          M     else
                          M       if (low (HSER2_SPBRG) == 255)
                          M         setf    SPBRG2
                          M       else
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000056 0E33               M         movlw   low (HSER2_SPBRG)
000058 6EAB               M         movwf   SPBRG2
                          M       endif
                          M     endif
                      08113     ifdef HSER2_SPBRGH
                      08114       ifdef SPBRGH2
                      08115         MOVE?CB HSER2_SPBRGH, SPBRGH2   ; Set baud rate generator reg high
                      08116       endif
                      08117     endif
                      08118         MOVE?CB HSER2_TXSTA, TXSTA2     ; Set transmit control reg
                          M         CHK?RP  TXSTA2
                          M     if (((TXSTA2) & 8000h) != PREV_ALT)
                          M       if ((TXSTA2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (TXSTA2) & 8000h
                          M     endif
                          M     if ((((TXSTA2) & 0fffh) > BANKA_END) & (((TXSTA2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((TXSTA2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TXSTA2)
                          M PREV_BANK = high (TXSTA2)
                          M       endif
                          M     endif
                          M     if (low (24h) == 0)
                          M         clrf    TXSTA2
                          M     else
                          M       if (low (24h) == 255)
                          M         setf    TXSTA2
                          M       else
00005A 0E24               M         movlw   low (24h)
00005C 6EA8               M         movwf   TXSTA2
                          M       endif
                          M     endif
                      08119         MOVE?CB HSER2_RCSTA, RCSTA2     ; Set receive control reg
                          M         CHK?RP  RCSTA2
                          M     if (((RCSTA2) & 8000h) != PREV_ALT)
                          M       if ((RCSTA2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RCSTA2) & 8000h
                          M     endif
                          M     if ((((RCSTA2) & 0fffh) > BANKA_END) & (((RCSTA2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RCSTA2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RCSTA2)
                          M PREV_BANK = high (RCSTA2)
                          M       endif
                          M     endif
                          M     if (low (90h) == 0)
                          M         clrf    RCSTA2
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M       if (low (90h) == 255)
                          M         setf    RCSTA2
                          M       else
00005E 0E90               M         movlw   low (90h)
000060 6E9C               M         movwf   RCSTA2
                          M       endif
                          M     endif
                      08132   LIST
000062                08133 main
                      00162 
                      00163 
                      00164 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00036   #HEADER
                      00165 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00051   #MSG "Using assembly header DEVI
                            CES\PIC18F25J50.MPASMINC"
                      00166 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00060   #CONFIG
                      00167 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00355   BANKA   $0000, $005F
                      00168 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00356   BANK0   $0060, $00FF
                      00169 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00357   BANK1   $0100, $01FF
                      00170 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00358   BANK2   $0200, $02FF
                      00171 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00359   BANK3   $0300, $03FF
                      00172 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00360   BANK4   $0400, $04FF
                      00173 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00361   BANK5   $0500, $05FF
                      00174 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00362   BANK6   $0600, $06FF
                      00175 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00363   BANK7   $0700, $07FF
                      00176 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00364   BANK8   $0800, $08FF
                      00177 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00365   BANK9   $0900, $09FF
                      00178 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00366   BANK10  $0A00, $0AFF
                      00179 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00367   BANK11  $0B00, $0BFF
                      00180 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00368   BANK12  $0C00, $0CFF
                      00181 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00369   BANK13  $0D00, $0DFF
                      00182 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00370   BANK14  $0E00, $0EBF
                      00183 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00375       INCLUDE "PBPPI18L.RAM"
                      00184 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00376   #ELSE
                      00185 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00377       LIBRARY  "PBPPIC18"
                      00186 
                      00187 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00378       INCLUDE "PBPPIC18.RAM"
                      00188 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00379   #ENDIF
                      00189 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00384   USBMEMORYADDRESS Con    $400    
                            ' USB RAM starts here
                      00190 ; D:\PROGRAM FILES (X86)\PBP3_1\DEVICES\PIC18F25J50.PBPINC      00388   #HEADER
                      00191 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00003   #CONFIG
                      00192 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00030   DEFINE OSC 8
                      00193 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00032   DEFINE HSER_RCSTA 90h 
                      00194 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00033   DEFINE HSER_TXSTA 24h
                      00195 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00034   DEFINE HSER_BAUD 9600 
                      00196 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00036   DEFINE HSER2_RCSTA 90h 
                      00197 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00037   DEFINE HSER2_TXSTA 24h
                      00198 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00038   DEFINE HSER2_BAUD 9600 
                      00199 
                      00200 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00042   init:
                      00201 
                      00202         LABEL?L _init   
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _init
                          M         XALL
                          M     else
000062                    M _init
                          M     endif
                      00203 
                      00204 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00043       OSCCON = %01110011
                      00205         MOVE?CB 073h, OSCCON
                          M         CHK?RP  OSCCON
                          M     if (((OSCCON) & 8000h) != PREV_ALT)
                          M       if ((OSCCON) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (OSCCON) & 8000h
                          M     endif
                          M     if ((((OSCCON) & 0fffh) > BANKA_END) & (((OSCCON) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((OSCCON) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (OSCCON)
                          M PREV_BANK = high (OSCCON)
                          M       endif
                          M     endif
                          M     if (low (073h) == 0)
                          M         clrf    OSCCON
                          M     else
                          M       if (low (073h) == 255)
                          M         setf    OSCCON
                          M       else
000062 0E73               M         movlw   low (073h)
000064 6ED3               M         movwf   OSCCON
                          M       endif
                          M     endif
                      00206 
                      00207 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00045       ADCON0 = 0
                      00208         MOVE?CB 000h, ADCON0
                          M         CHK?RP  ADCON0
                          M     if (((ADCON0) & 8000h) != PREV_ALT)
                          M       if ((ADCON0) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       endif
                          M PREV_ALT = (ADCON0) & 8000h
                          M     endif
                          M     if ((((ADCON0) & 0fffh) > BANKA_END) & (((ADCON0) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((ADCON0) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ADCON0)
                          M PREV_BANK = high (ADCON0)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000066 6AC2               M         clrf    ADCON0
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    ADCON0
                          M       else
                          M         movlw   low (000h)
                          M         movwf   ADCON0
                          M       endif
                          M     endif
                      00209 
                      00210 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00046       ANCON0 = $FF
                      00211         MOVE?CB 0FFh, ANCON0
                          M         CHK?RP  ANCON0
                          M     if (((ANCON0) & 8000h) != PREV_ALT)
                          M       if ((ANCON0) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (ANCON0) & 8000h
                          M     endif
                          M     if ((((ANCON0) & 0fffh) > BANKA_END) & (((ANCON0) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((ANCON0) & 0f00h) != (PREV_BANK << 8))
000068 010F               M         movlb   high (ANCON0)
  0000000F                M PREV_BANK = high (ANCON0)
                          M       endif
                          M     endif
                          M     if (low (0FFh) == 0)
                          M         clrf    ANCON0
                          M     else
                          M       if (low (0FFh) == 255)
00006A 6948               M         setf    ANCON0
                          M       else
                          M         movlw   low (0FFh)
                          M         movwf   ANCON0
                          M       endif
                          M     endif
                      00212 
                      00213 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00047       ANCON1 = $FF
                      00214         MOVE?CB 0FFh, ANCON1
                          M         CHK?RP  ANCON1
                          M     if (((ANCON1) & 8000h) != PREV_ALT)
                          M       if ((ANCON1) & 8000h)
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (ANCON1) & 8000h
                          M     endif
                          M     if ((((ANCON1) & 0fffh) > BANKA_END) & (((ANCON1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((ANCON1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (ANCON1)
                          M PREV_BANK = high (ANCON1)
                          M       endif
                          M     endif
                          M     if (low (0FFh) == 0)
                          M         clrf    ANCON1
                          M     else
                          M       if (low (0FFh) == 255)
00006C 6949               M         setf    ANCON1
                          M       else
                          M         movlw   low (0FFh)
                          M         movwf   ANCON1
                          M       endif
                          M     endif
                      00215 
                      00216 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00052       goto uart_pps
                      00217         GOTO?L  _uart_pps
                          M         L?GOTO  _uart_pps
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (_uart_pps))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
00006E 0100               M         movlb   0
  00000000                M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    _uart_pps
                          M     else
                          M       if ((_uart_pps) < 1)
                          M         goto    _uart_pps
                          M       else
                          M         if ((_uart_pps) > $)
000070 EF43 F000          M         goto    _uart_pps
                          M         else
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           if ((_uart_pps) < ($ - 3ffh))
                          M         goto    _uart_pps
                          M           else
                          M         bra     _uart_pps
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00218 
                      00219 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00054   uart_default:
                      00220 
                      00221         LABEL?L _uart_default   
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _uart_default
                          M         XALL
                          M     else
000074                    M _uart_default
                          M     endif
                      00222 
                      00223 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00056       TRISA = 0
                      00224         MOVE?CB 000h, TRISA
                          M         CHK?RP  TRISA
                          M     if (((TRISA) & 8000h) != PREV_ALT)
                          M       if ((TRISA) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (TRISA) & 8000h
                          M     endif
                          M     if ((((TRISA) & 0fffh) > BANKA_END) & (((TRISA) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((TRISA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISA)
                          M PREV_BANK = high (TRISA)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000074 6A92               M         clrf    TRISA
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    TRISA
                          M       else
                          M         movlw   low (000h)
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movwf   TRISA
                          M       endif
                          M     endif
                      00225 
                      00226 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00057       TRISB = 0
                      00227         MOVE?CB 000h, TRISB
                          M         CHK?RP  TRISB
                          M     if (((TRISB) & 8000h) != PREV_ALT)
                          M       if ((TRISB) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (TRISB) & 8000h
                          M     endif
                          M     if ((((TRISB) & 0fffh) > BANKA_END) & (((TRISB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((TRISB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISB)
                          M PREV_BANK = high (TRISB)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000076 6A93               M         clrf    TRISB
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    TRISB
                          M       else
                          M         movlw   low (000h)
                          M         movwf   TRISB
                          M       endif
                          M     endif
                      00228 
                      00229 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00058       TRISC = %10000000
                      00230         MOVE?CB 080h, TRISC
                          M         CHK?RP  TRISC
                          M     if (((TRISC) & 8000h) != PREV_ALT)
                          M       if ((TRISC) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (TRISC) & 8000h
                          M     endif
                          M     if ((((TRISC) & 0fffh) > BANKA_END) & (((TRISC) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((TRISC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISC)
                          M PREV_BANK = high (TRISC)
                          M       endif
                          M     endif
                          M     if (low (080h) == 0)
                          M         clrf    TRISC
                          M     else
                          M       if (low (080h) == 255)
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         setf    TRISC
                          M       else
000078 0E80               M         movlw   low (080h)
00007A 6E94               M         movwf   TRISC
                          M       endif
                          M     endif
                      00231 
                      00232 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00060       hserin [ud]
                      00233         HSERIN?B        _Ud
                          M         L?CALL  HSERIN
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    HSERIN
                          M     else
                          M       if ((HSERIN) < 1)
                          M         call    HSERIN
                          M       else
                          M         if ((HSERIN) > $)
                          M         call    HSERIN
                          M         else
                          M           if ((HSERIN) < ($ - 3ffh))
                          M         call    HSERIN
                          M           else
00007C DFC3               M         rcall   HSERIN
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB _Ud
                          M         CHK?RP  _Ud
                          M     if (((_Ud)   & 8000h) != PREV_ALT)
                          M       if ((_Ud)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Ud)   & 8000h
                          M     endif
                          M     if ((((_Ud)   & 0fffh) > BANKA_END) & (((_Ud)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Ud)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Ud)
                          M PREV_BANK = high (_Ud)
                          M       endif
                          M     endif
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00007E 6E1A               M         movwf   _Ud
                      00234 
                      00235 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00061       hserout [ud]
                      00236         HSEROUT?B       _Ud
                          M         MOVE?BA _Ud
                          M         CHK?RP  _Ud
                          M     if (((_Ud)   & 8000h) != PREV_ALT)
                          M       if ((_Ud)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Ud)   & 8000h
                          M     endif
                          M     if ((((_Ud)   & 0fffh) > BANKA_END) & (((_Ud)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Ud)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Ud)
                          M PREV_BANK = high (_Ud)
                          M       endif
                          M     endif
000080 501A               M         movf    _Ud, W
                          M         L?CALL  HSEROUT
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    HSEROUT
                          M     else
                          M       if ((HSEROUT) < 1)
                          M         call    HSEROUT
                          M       else
                          M         if ((HSEROUT) > $)
                          M         call    HSEROUT
                          M         else
                          M           if ((HSEROUT) < ($ - 3ffh))
                          M         call    HSEROUT
                          M           else
000082 DFC8               M         rcall   HSEROUT
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00237 
                      00238 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00063       goto uart_default
                      00239         GOTO?L  _uart_default
                          M         L?GOTO  _uart_default
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (_uart_default))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    _uart_default
                          M     else
                          M       if ((_uart_default) < 1)
                          M         goto    _uart_default
                          M       else
                          M         if ((_uart_default) > $)
                          M         goto    _uart_default
                          M         else
                          M           if ((_uart_default) < ($ - 3ffh))
                          M         goto    _uart_default
                          M           else
000084 D7F7               M         bra     _uart_default
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00240 
                      00241 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00066   uart_pps:
                      00242 
                      00243         LABEL?L _uart_pps       
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M _uart_pps
                          M         XALL
                          M     else
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000086                    M _uart_pps
                          M     endif
                      00244 
                      00245 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00068       TRISA = %00000001
                      00246         MOVE?CB 001h, TRISA
                          M         CHK?RP  TRISA
                          M     if (((TRISA) & 8000h) != PREV_ALT)
                          M       if ((TRISA) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (TRISA) & 8000h
                          M     endif
                          M     if ((((TRISA) & 0fffh) > BANKA_END) & (((TRISA) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((TRISA) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISA)
                          M PREV_BANK = high (TRISA)
                          M       endif
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    TRISA
                          M     else
                          M       if (low (001h) == 255)
                          M         setf    TRISA
                          M       else
000086 0E01               M         movlw   low (001h)
000088 6E92               M         movwf   TRISA
                          M       endif
                          M     endif
                      00247 
                      00248 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00069       TRISB = 0
                      00249         MOVE?CB 000h, TRISB
                          M         CHK?RP  TRISB
                          M     if (((TRISB) & 8000h) != PREV_ALT)
                          M       if ((TRISB) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (TRISB) & 8000h
                          M     endif
                          M     if ((((TRISB) & 0fffh) > BANKA_END) & (((TRISB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((TRISB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISB)
                          M PREV_BANK = high (TRISB)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
00008A 6A93               M         clrf    TRISB
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    TRISB
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       else
                          M         movlw   low (000h)
                          M         movwf   TRISB
                          M       endif
                          M     endif
                      00250 
                      00251 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00070       TRISC = 0
                      00252         MOVE?CB 000h, TRISC
                          M         CHK?RP  TRISC
                          M     if (((TRISC) & 8000h) != PREV_ALT)
                          M       if ((TRISC) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (TRISC) & 8000h
                          M     endif
                          M     if ((((TRISC) & 0fffh) > BANKA_END) & (((TRISC) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((TRISC) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISC)
                          M PREV_BANK = high (TRISC)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
00008C 6A94               M         clrf    TRISC
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    TRISC
                          M       else
                          M         movlw   low (000h)
                          M         movwf   TRISC
                          M       endif
                          M     endif
                      00253 
                      00254 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00071       RCSTA2.7 = 1
                      00255         MOVE?CT 001h, _RCSTA2??7
                          M         CHK?RP  RCSTA2
                          M     if (((RCSTA2) & 8000h) != PREV_ALT)
                          M       if ((RCSTA2) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RCSTA2) & 8000h
                          M     endif
                          M     if ((((RCSTA2) & 0fffh) > BANKA_END) & (((RCSTA2) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RCSTA2) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RCSTA2)
                          M PREV_BANK = high (RCSTA2)
                          M       endif
                          M     endif
                          M     if (((001h) & 1) == 1)
00008E 8E9C               M         bsf     RCSTA2, 007h
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     else
                          M         bcf     RCSTA2, 007h
                          M     endif
                      00256 
                      00257 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00074       RPINR16 = 0     'RX2 is PR0(RA0)
                      00258         MOVE?CB 000h, RPINR16
                          M         CHK?RP  RPINR16
                          M     if (((RPINR16) & 8000h) != PREV_ALT)
                          M       if ((RPINR16) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RPINR16) & 8000h
                          M     endif
                          M     if ((((RPINR16) & 0fffh) > BANKA_END) & (((RPINR16) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RPINR16) & 0f00h) != (PREV_BANK << 8))
000090 010E               M         movlb   high (RPINR16)
  0000000E                M PREV_BANK = high (RPINR16)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000092 6BF6               M         clrf    RPINR16
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    RPINR16
                          M       else
                          M         movlw   low (000h)
                          M         movwf   RPINR16
                          M       endif
                          M     endif
                      00259 
                      00260 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00075       RPOR1 = 5       'TX2 is RP1(RA1) (see datasheet tabl
                            e10-14 p.152)
                      00261         MOVE?CB 005h, RPOR1
                          M         CHK?RP  RPOR1
                          M     if (((RPOR1) & 8000h) != PREV_ALT)
                          M       if ((RPOR1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (RPOR1) & 8000h
                          M     endif
                          M     if ((((RPOR1) & 0fffh) > BANKA_END) & (((RPOR1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((RPOR1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (RPOR1)
                          M PREV_BANK = high (RPOR1)
                          M       endif
                          M     endif
                          M     if (low (005h) == 0)
                          M         clrf    RPOR1
                          M     else
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M       if (low (005h) == 255)
                          M         setf    RPOR1
                          M       else
000094 0E05               M         movlw   low (005h)
000096 6FC7               M         movwf   RPOR1
                          M       endif
                          M     endif
                      00262 
                      00263 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00078       hserin2 [ud]  
                      00264         HSERIN2?B       _Ud
                          M         L?CALL  HSERIN2
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
000098 0100               M         movlb   0
  00000000                M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    HSERIN2
                          M     else
                          M       if ((HSERIN2) < 1)
                          M         call    HSERIN2
                          M       else
                          M         if ((HSERIN2) > $)
                          M         call    HSERIN2
                          M         else
                          M           if ((HSERIN2) < ($ - 3ffh))
                          M         call    HSERIN2
                          M           else
00009A DFC4               M         rcall   HSERIN2
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB _Ud
                          M         CHK?RP  _Ud
                          M     if (((_Ud)   & 8000h) != PREV_ALT)
                          M       if ((_Ud)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Ud)   & 8000h
                          M     endif
                          M     if ((((_Ud)   & 0fffh) > BANKA_END) & (((_Ud)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Ud)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Ud)
                          M PREV_BANK = high (_Ud)
                          M       endif
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
00009C 6E1A               M         movwf   _Ud
                      00265 
                      00266 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00079       hserout2 [ud] 
                      00267         HSEROUT2?B      _Ud
                          M         MOVE?BA _Ud
                          M         CHK?RP  _Ud
                          M     if (((_Ud)   & 8000h) != PREV_ALT)
                          M       if ((_Ud)   & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_Ud)   & 8000h
                          M     endif
                          M     if ((((_Ud)   & 0fffh) > BANKA_END) & (((_Ud)   & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_Ud)   & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_Ud)
                          M PREV_BANK = high (_Ud)
                          M       endif
                          M     endif
00009E 501A               M         movf    _Ud, W
                          M         L?CALL  HSEROUT2
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    HSEROUT2
                          M     else
                          M       if ((HSEROUT2) < 1)
                          M         call    HSEROUT2
                          M       else
                          M         if ((HSEROUT2) > $)
                          M         call    HSEROUT2
                          M         else
                          M           if ((HSEROUT2) < ($ - 3ffh))
                          M         call    HSEROUT2
                          M           else
0000A0 DFC9               M         rcall   HSEROUT2
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00268 
                      00269 ; D:\PBP3_PROJECT\25J50_PPS_TEST.PBP    00081       goto uart_pps
                      00270         GOTO?L  _uart_pps
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         L?GOTO  _uart_pps
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (_uart_pps))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    _uart_pps
                          M     else
                          M       if ((_uart_pps) < 1)
                          M         goto    _uart_pps
                          M       else
                          M         if ((_uart_pps) > $)
                          M         goto    _uart_pps
                          M         else
                          M           if ((_uart_pps) < ($ - 3ffh))
                          M         goto    _uart_pps
                          M           else
0000A2 D7F1               M         bra     _uart_pps
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00271 
                      00272         END
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABDEN                             00000000
ABDOVF                            00000007
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ACTVIE                            00000002
ACTVIF                            00000002
ADCAL                             00000006
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADC_BITS                          00000008
ADC_CLOCK                         00000003
ADC_SAMPLEUS                      00000032
ADDEN                             00000003
ADDEN1                            00000003
ADDEN2                            00000003
ADDR0                             00000000
ADDR1                             00000001
ADDR2                             00000002
ADDR3                             00000003
ADDR4                             00000004
ADDR5                             00000005
ADDR6                             00000006
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADMSK1                            00000001
ADMSK2                            00000002
ADMSK3                            00000003
ADMSK4                            00000004
ADMSK5                            00000005
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
ALRMCFG                           00000F91
ALRMEN                            00000007
ALRMPTR0                          00000000
ALRMPTR1                          00000001
ALRMRPT                           00000F90
ALRMVALH                          00000F8F
ALRMVALL                          00000F8E
AMASK0                            00000002
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

AMASK1                            00000003
AMASK2                            00000004
AMASK3                            00000005
AN0                               00000000
AN1                               00000001
AN10                              00000001
AN11                              00000002
AN12                              00000000
AN2                               00000002
AN3                               00000003
AN4                               00000005
AN8                               00000002
AN9                               00000003
ANCON0                            00000F48
ANCON1                            00000F49
ARPT0                             00000000
ARPT1                             00000001
ARPT2                             00000002
ARPT3                             00000003
ARPT4                             00000004
ARPT5                             00000005
ARPT6                             00000006
ARPT7                             00000007
BANK0_END                         000000FF
BANK0_START                       00000060
BANK10_END                        00000AFF
BANK10_START                      00000A00
BANK11_END                        00000BFF
BANK11_START                      00000B00
BANK12_END                        00000CFF
BANK12_START                      00000C00
BANK13_END                        00000DFF
BANK13_START                      00000D00
BANK14_END                        00000EBF
BANK14_START                      00000E00
BANK1_END                         000001FF
BANK1_START                       00000100
BANK2_END                         000002FF
BANK2_START                       00000200
BANK3_END                         000003FF
BANK3_START                       00000300
BANK4_END                         000004FF
BANK4_START                       00000400
BANK5_END                         000005FF
BANK5_START                       00000500
BANK6_END                         000006FF
BANK6_START                       00000600
BANK7_END                         000007FF
BANK7_START                       00000700
BANK8_END                         000008FF
BANK8_START                       00000800
BANK9_END                         000009FF
BANK9_START                       00000900
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

BANKA_END                         0000005F
BANKA_START                       00000000
BANKED                            00000001
BAUDCON                           00000F7E
BAUDCON1                          00000F7E
BAUDCON2                          00000F7C
BAUDCTL                           00000F7E
BCL1IE                            00000003
BCL1IF                            00000003
BCL1IP                            00000003
BCL2IE                            00000006
BCL2IF                            00000006
BCL2IP                            00000006
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BF                                00000000
BF1                               00000000
BGVST                             00000006
BIT?FLIP                          
BIT?GOTO                          
BIT?R1                            
BIT?R2                            
BIT?W                             
BLOCK_SIZE                        00000040
BOR                               00000000
BRG16                             00000003
BRGH                              00000002
BRGH1                             00000002
BRGH2                             00000002
BSR                               00000FE0
BTOEE                             00000004
BTOEF                             00000004
BTSEE                             00000007
BTSEF                             00000007
BUTTON_PAUSE                      0000000A
C                                 00000000
C1INA                             00000000
C1INB                             00000003
C2INA                             00000001
C2INB                             00000002
CAL0                              00000000
CAL1                              00000001
CAL2                              00000002
CAL3                              00000003
CAL4                              00000004
CAL5                              00000005
CAL6                              00000006
CAL7                              00000007
CCH0                              00000000
CCH01                             00000000
CCH1                              00000001
CCH11                             00000001
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

CCP1CON                           00000FBA
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP1_BIT                          00000002
CCP1_REG                          00000F82
CCP2CON                           00000FB4
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCP2_BIT                          00000001
CCP2_REG                          00000F82
CCPR1                             00000FBB
CCPR1H                            00000FBC
CCPR1L                            00000FBB
CCPR2                             00000FB5
CCPR2H                            00000FB6
CCPR2L                            00000FB5
CHIME                             00000006
CHK?RP                            
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CK1                               00000006
CKE                               00000006
CKE1                              00000006
CKP                               00000004
CKP1                              00000004
CLKI                              00000007
CLKO                              00000006
CLRWDT?                           
CLRWDT?NOP                        
CM                                00000005
CM1CON                            00000FD2
CM1CON1                           00000FD2
CM1IE                             00000005
CM1IF                             00000005
CM1IP                             00000005
CM2CON                            00000FD1
CM2CON1                           00000FD1
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

CM2IE                             00000006
CM2IF                             00000006
CM2IP                             00000006
CMPL0                             00000006
CMPL1                             00000007
CMSTAT                            00000F70
CMSTATUS                          00000F70
COE                               00000006
COE1                              00000006
CON                               00000007
CON1                              00000007
COUT1                             00000000
COUT2                             00000001
CPOL                              00000005
CPOL1                             00000005
CRC16EE                           00000002
CRC16EF                           00000002
CRC5EE                            00000001
CRC5EF                            00000001
CREF                              00000002
CREF1                             00000002
CREN                              00000004
CREN1                             00000004
CREN2                             00000004
CSRC                              00000007
CSRC1                             00000007
CSRC2                             00000007
CTEDG1                            00000002
CTEDG2                            00000003
CTMUCONH                          00000FB3
CTMUCONL                          00000FB2
CTMUEN                            00000007
CTMUICON                          00000FB1
CTMUIE                            00000002
CTMUIF                            00000002
CTMUIP                            00000002
CTMUSIDL                          00000005
CTPLS                             00000002
CTTRIG                            00000000
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            00000F53
CVREF_MINUS                       00000002
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
CVRSS                             00000004
D                                 00000005
D1                                00000005
DATA_ADDRESS                      00000005
DATA_ADDRESS1                     00000005
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DEBUGIN_BIT                       00000000
DEBUGIN_MODE                      00000001
DEBUGIN_REG                       00000F81
DEBUG_BAUD                        00000960
DEBUG_BIT                         00000000
DEBUG_DELAY                       0000019A
DEBUG_MODE                        00000001
DEBUG_REG                         00000F81
DFN8EE                            00000003
DFN8EF                            00000003
DIR                               00000002
DLYCYC0                           00000004
DLYCYC1                           00000005
DLYCYC2                           00000006
DLYCYC3                           00000007
DLYINTEN                          00000001
DMABCH                            00000F66
DMABCL                            00000F67
DMACON1                           00000F88
DMACON2                           00000F86
DMAEN                             00000000
DONE                              00000001
DS                                00000003
DSBOR                             00000001
DSCONH                            00000F4D
DSCONL                            00000F4C
DSEN                              00000007
DSFLT                             00000007
DSGPR0                            00000F4E
DSGPR1                            00000F4F
DSINT0                            00000000
DSMCLR                            00000002
DSPOR                             00000000
DSRTC                             00000003
DSULP                             00000005
DSULPEN                           00000001
DSWAKEH                           00000F4B
DSWAKEL                           00000F4A
DSWDT                             00000004
DT1                               00000007
DUNN                              00000044
DUNN5                             00000046
DUNN_USED                         00000001
DUPLEX0                           00000002
DUPLEX1                           00000003
D_A                               00000005
D_A1                              00000002
D_MINUS                           00000004
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

D_NOT_A                           00000005
D_NOT_A1                          00000005
D_PLUS                            00000005
ECCP1AS                           00000FBE
ECCP1AS0                          00000004
ECCP1AS1                          00000005
ECCP1AS2                          00000006
ECCP1ASE                          00000007
ECCP1CON                          00000FBA
ECCP1DEL                          00000FBD
ECCP1OD                           00000000
ECCP2AS                           00000FB8
ECCP2AS0                          00000004
ECCP2AS1                          00000005
ECCP2AS2                          00000006
ECCP2ASE                          00000007
ECCP2CON                          00000FB4
ECCP2DEL                          00000FB7
ECCP2OD                           00000001
EDG1POL                           00000004
EDG1SEL0                          00000002
EDG1SEL1                          00000003
EDG1STAT                          00000000
EDG2POL                           00000007
EDG2SEL0                          00000005
EDG2SEL1                          00000006
EDG2STAT                          00000001
EDGEN                             00000003
EDGSEQEN                          00000002
EECON1                            00000FA6
EECON2                            00000FA7
ENDP0                             00000003
ENDP1                             00000004
ENDP2                             00000005
ENDP3                             00000006
EPCONDIS                          00000003
EPHSHK                            00000004
EPINEN                            00000001
EPOUTEN                           00000002
EPSTALL                           00000000
EVPOL0                            00000003
EVPOL01                           00000003
EVPOL1                            00000004
EVPOL11                           00000004
FAST                              00000001
FERR                              00000002
FERR1                             00000002
FERR2                             00000002
FLAGS                             00000000
FREE                              00000004
FRM0                              00000000
FRM1                              00000001
FRM10                             00000002
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

FRM2                              00000002
FRM3                              00000003
FRM4                              00000004
FRM5                              00000005
FRM6                              00000006
FRM7                              00000007
FRM8                              00000000
FRM9                              00000001
FSEN                              00000002
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
GCEN                              00000007
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GIE_GIEH                          00000007
GO                                00000001
GOP                               00000001
GOTO?L                            
GO_DONE                           00000001
GO_NOT_DONE                       00000001
HALFSEC                           00000003
HLVDCON                           00000F85
HLVDEN                            00000004
HLVDIN                            00000005
HLVDL0                            00000000
HLVDL1                            00000001
HLVDL2                            00000002
HLVDL3                            00000003
HSER2INIT_USED                    00000001
HSER2_BAUD                        9600
HSER2_BITS                        00000008
HSER2_RCSTA                       90h
HSER2_SPBRG                       00000033
HSER2_TXSTA                       24h
HSERIN                            00000004
HSERIN2                           00000024
HSERIN2?B                         
HSERIN2X                          0000002C
HSERIN2X_USED                     00000001
HSERIN2_USED                      00000001
HSERIN?B                          
HSERINIT_USED                     00000001
HSERINX                           0000000C
HSERINX_USED                      00000001
HSERIN_USED                       00000001
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

HSEROUT                           00000014
HSEROUT2                          00000034
HSEROUT2?B                        
HSEROUT2_USED                     00000001
HSEROUT?B                         
HSEROUT_USED                      00000001
HSER_BAUD                         9600
HSER_BITS                         00000008
HSER_PORT                         00000001
HSER_RCSTA                        90h
HSER_SPBRG                        00000033
HSER_TXSTA                        24h
I2CFIRSTFLAG                      FLAGS, 2
I2CREADFLAG                       FLAGS, 3
I2CSTOPFLAG                       FLAGS, 5
I2CSTOPSTRFLAG                    FLAGS, 6
I2CWRITEFLAG                      FLAGS, 4
I2C_DAT                           00000005
I2C_DAT1                          00000005
I2C_READ                          00000002
I2C_READ1                         00000002
I2C_START                         00000003
I2C_START1                        00000003
I2C_STOP                          00000004
I2C_STOP1                         00000004
IDISSEN                           00000001
IDLEIE                            00000004
IDLEIF                            00000004
IDLEN                             00000007
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INIT                              0000004A
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INT3E                             00000005
INT3F                             00000002
INT3IE                            00000005
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

INT3IF                            00000002
INT3IP                            00000001
INT3P                             00000001
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTEDG3                           00000003
INTLVL0                           00000000
INTLVL1                           00000001
INTLVL2                           00000002
INTLVL3                           00000003
INTSRC                            00000007
IOLOCK                            00000000
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IPR3                              00000FA5
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRNG0                             00000000
IRNG1                             00000001
IRVST                             00000005
ITRIM0                            00000002
ITRIM1                            00000003
ITRIM2                            00000004
ITRIM3                            00000005
ITRIM4                            00000006
ITRIM5                            00000007
KBI0                              00000004
KBI1                              00000005
KBI2                              00000006
KBI3                              00000007
L?CALL                            
L?GOTO                            
LABEL?L                           
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA5                             00000005
LATA6                             00000006
LATA7                             00000007
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LCDCDFLAG                         FLAGS, 0
LCDINITFLAG                       FLAGS, 1
LCD_BITS                          00000004
LCD_COMMANDUS                     000007D0
LCD_DATAUS                        00000032
LCD_DBIT                          00000000
LCD_DREG                          00000F80
LCD_EBIT                          00000003
LCD_EREG                          00000F81
LCD_LINES                         00000002
LCD_RSBIT                         00000004
LCD_RSREG                         00000F80
LCD_RWBIT                         00000004
LCD_RWREG                         00000F80
LVDIE                             00000002
LVDIF                             00000002
LVDIP                             00000002
LVDSTAT                           00000006
MOVE?AB                           
MOVE?AT                           
MOVE?AW                           
MOVE?AWW                          
MOVE?BA                           
MOVE?BB                           
MOVE?BT                           
MOVE?BW                           
MOVE?CA                           
MOVE?CB                           
MOVE?CT                           
MOVE?CW                           
MOVE?TA                           
MOVE?TB                           
MOVE?TT                           
MOVE?TW                           
MOVE?WA                           
MOVE?WB                           
MOVE?WT                           
MOVE?WW                           
MOVE?WWA                          
MPASMX_USED                       00000001
MSK0                              00000000
MSK01                             00000000
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

MSK1                              00000001
MSK11                             00000001
MSK2                              00000002
MSK21                             00000002
MSK3                              00000003
MSK31                             00000003
MSK4                              00000004
MSK41                             00000004
MSK5                              00000005
MSK51                             00000005
MSK6                              00000006
MSK61                             00000006
MSK7                              00000007
MSK71                             00000007
N                                 00000004
NOT_A                             00000005
NOT_A1                            00000005
NOT_ADDRESS                       00000005
NOT_ADDRESS1                      00000005
NOT_BOR                           00000000
NOT_CM                            00000005
NOT_DONE                          00000001
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_RI                            00000004
NOT_SS1                           00000005
NOT_TO                            00000003
NOT_TX8                           00000006
NOT_UOE                           00000001
NOT_W                             00000002
NOT_W1                            00000002
NOT_WRITE                         00000002
NOT_WRITE1                        00000002
ODCON1                            00000F42
ODCON2                            00000F41
ODCON3                            00000F40
OERR                              00000001
OERR1                             00000001
OERR2                             00000001
OSC                               8
OSC1                              00000007
OSC2                              00000006
OSCCON                            00000FD3
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSC_VALID                         00000001
OSTS                              00000003
OV                                00000003
P                                 00000004
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

P1                                00000004
P1DC0                             00000000
P1DC1                             00000001
P1DC2                             00000002
P1DC3                             00000003
P1DC4                             00000004
P1DC5                             00000005
P1DC6                             00000006
P1M0                              00000006
P1M1                              00000007
P1RSEN                            00000007
P2DC0                             00000000
P2DC1                             00000001
P2DC2                             00000002
P2DC3                             00000003
P2DC4                             00000004
P2DC5                             00000005
P2DC6                             00000006
P2M0                              00000006
P2M1                              00000007
P2RSEN                            00000007
PADCFG1                           00000F3C
PBP_HARDWAREDEF                   
PBP_PATH                          D:\PROGRAM FILES (X86)\PBP3_1\
PC                                00000FF9
PCFG0                             00000000
PCFG1                             00000001
PCFG10                            00000002
PCFG11                            00000003
PCFG12                            00000004
PCFG2                             00000002
PCFG3                             00000003
PCFG4                             00000004
PCFG8                             00000000
PCFG9                             00000001
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PEIE                              00000006
PEIE_GIEL                         00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PIDEE                             00000000
PIDEF                             00000000
PIE1                              00000F9D
PIE2                              00000FA0
PIE3                              00000FA3
PIR                               00000F9E
PIR1                              00000F9E
PIR2                              00000FA1
PIR3                              00000FA4
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

PKTDIS                            00000004
PLLEN                             00000006
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
PMPTTL                            00000000
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PPB0                              00000000
PPB1                              00000001
PPBI                              00000001
PPBRST                            00000006
PPSCON                            00000EFF
PR2                               00000FCB
PR4                               00000F77
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PREV_ALT                          00000000
PREV_BANK                         00000000
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PSA                               00000003
PSS1AC0                           00000002
PSS1AC1                           00000003
PSS1BD0                           00000000
PSS1BD1                           00000001
PSS2AC0                           00000002
PSS2AC1                           00000003
PSS2BD0                           00000000
PSS2BD1                           00000001
PSTR1CON                          00000FBF
PSTR2CON                          00000FB9
PWM1CON                           00000FBD
PWM2CON                           00000FB7
R                                 00000002
R0                                00000002
R1                                00000004
R2                                00000006
R3                                00000008
R4                                0000000A
R5                                0000000C
R6                                0000000E
R7                                00000010
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

R8                                00000012
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA5                               00000005
RA6                               00000006
RA7                               00000007
RAM_BANKS                         0000000F
RAM_END                           00000EBF
RAM_START                         00000000
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC1IE                             00000005
RC1IF                             00000005
RC1IP                             00000005
RC2                               00000002
RC2IE                             00000005
RC2IF                             00000005
RC2IP                             00000005
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCON                              00000FD0
RCREG                             00000FAF
RCREG1                            00000FAF
RCREG2                            00000FAA
RCSTA                             00000FAC
RCSTA1                            00000FAC
RCSTA2                            00000F9C
RCV                               00000005
RD                                00000000
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

RD16                              00000001
RD161                             00000001
READ_WRITE                        00000002
READ_WRITE1                       00000002
REFO                              00000002
REFOCON                           00000F3D
REGSLP                            00000007
RELEASE                           00000000
RESET_ORG                         00000000
RESUME                            00000002
RI                                00000004
RM1                               00000014
RM2                               00000015
RODIV0                            00000000
RODIV1                            00000001
RODIV2                            00000002
RODIV3                            00000003
ROON                              00000007
ROSEL                             00000004
ROSSLP                            00000005
RP0                               00000000
RP1                               00000001
RP10                              00000007
RP11                              00000000
RP12                              00000001
RP13                              00000002
RP17                              00000006
RP18                              00000007
RP2                               00000005
RP3                               00000000
RP4                               00000001
RP5                               00000002
RP6                               00000003
RP7                               00000004
RP8                               00000005
RP9                               00000006
RPINR1                            00000EE7
RPINR12                           00000EF2
RPINR13                           00000EF3
RPINR16                           00000EF6
RPINR17                           00000EF7
RPINR2                            00000EE8
RPINR21                           00000EFB
RPINR22                           00000EFC
RPINR23                           00000EFD
RPINR24                           00000EFE
RPINR3                            00000EE9
RPINR4                            00000EEA
RPINR6                            00000EEC
RPINR7                            00000EED
RPINR8                            00000EEE
RPOR0                             00000EC6
RPOR1                             00000EC7
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

RPOR10                            00000ED0
RPOR11                            00000ED1
RPOR12                            00000ED2
RPOR13                            00000ED3
RPOR17                            00000ED7
RPOR18                            00000ED8
RPOR2                             00000EC8
RPOR3                             00000EC9
RPOR4                             00000ECA
RPOR5                             00000ECB
RPOR6                             00000ECC
RPOR7                             00000ECD
RPOR8                             00000ECE
RPOR9                             00000ECF
RR1                               00000016
RR2                               00000017
RS1                               00000018
RS2                               00000019
RSEN                              00000001
RST?RP                            
RTCC                              00000001
RTCCAL                            00000F3E
RTCCFG                            00000F3F
RTCCIE                            00000000
RTCCIF                            00000000
RTCCIP                            00000000
RTCEN                             00000007
RTCOE                             00000002
RTCPTR0                           00000000
RTCPTR1                           00000001
RTCSYNC                           00000004
RTCVALH                           00000F99
RTCVALL                           00000F98
RTCWDIS                           00000000
RTCWREN                           00000005
RTSECSEL0                         00000001
RTSECSEL1                         00000002
RX1                               00000007
RX9                               00000006
RX91                              00000006
RX92                              00000006
RX9D                              00000000
RX9D1                             00000000
RX9D2                             00000000
RXADDRH                           00000F68
RXADDRL                           00000F69
RXDTP                             00000005
RXINC                             00000004
R_NOT_W                           00000002
R_NOT_W1                          00000002
R_W                               00000002
R_W1                              00000005
S                                 00000003
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

S1                                00000003
SCK1                              00000004
SCL1                              00000004
SCS0                              00000000
SCS1                              00000001
SDA1                              00000005
SDI1                              00000005
SDO1                              00000007
SE0                               00000005
SEN                               00000000
SENDB                             00000003
SENDB1                            00000003
SENDB2                            00000003
SMP                               00000007
SMP1                              00000007
SOFIE                             00000006
SOFIF                             00000006
SP0                               00000000
SP1                               00000001
SP2                               00000002
SP3                               00000003
SP4                               00000004
SPBRG                             00000FB0
SPBRG1                            00000FB0
SPBRG2                            00000FAB
SPBRGH                            00000F7F
SPBRGH1                           00000F7F
SPBRGH2                           00000F7D
SPEN                              00000007
SPEN1                             00000007
SPEN2                             00000007
SPI1OD                            00000000
SPI2OD                            00000001
SREN                              00000005
SREN1                             00000005
SREN2                             00000005
SSCON0                            00000006
SSCON1                            00000007
SSP1ADD                           00000FC8
SSP1BUF                           00000FC9
SSP1CON1                          00000FC6
SSP1CON2                          00000FC5
SSP1IE                            00000003
SSP1IF                            00000003
SSP1IP                            00000003
SSP1STAT                          00000FC7
SSP2ADD                           00000F74
SSP2BUF                           00000F75
SSP2CON1                          00000F72
SSP2CON2                          00000F71
SSP2IE                            00000007
SSP2IF                            00000007
SSP2IP                            00000007
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

SSP2STAT                          00000F73
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPEN1                            00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM01                            00000000
SSPM1                             00000001
SSPM11                            00000001
SSPM2                             00000002
SSPM21                            00000002
SSPM3                             00000003
SSPM31                            00000003
SSPOV                             00000006
SSPOV1                            00000006
SSPSTAT                           00000FC7
STALLIE                           00000005
STALLIF                           00000005
STATUS                            00000FD8
STKFUL                            00000007
STKOVF                            00000007
STKPTR                            00000FFC
STKUNF                            00000006
STRA                              00000000
STRB                              00000001
STRC                              00000002
STRD                              00000003
STRSYNC                           00000004
SUSPND                            00000001
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
SYNC1                             00000004
SYNC2                             00000004
T08BIT                            00000006
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0IP                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0SE                              00000004
T1CK                              00000000
T1CKPS0                           00000004
T1CKPS01                          00000004
T1CKPS1                           00000005
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

T1CKPS11                          00000005
T1CON                             00000FCD
T1DONE                            00000003
T1GCON                            00000F9A
T1GGO                             00000003
T1GGO_T1DONE                      00000003
T1GPOL                            00000006
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T1OSCEN                           00000003
T1OSCEN1                          00000003
T1OSI                             00000001
T1OSO                             00000000
T1RUN                             00000004
T1SYNC                            00000002
T1SYNC1                           00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
T3CCP1                            00000000
T3CCP2                            00000001
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000F79
T3DONE                            00000003
T3GCON                            00000F97
T3GGO                             00000003
T3GGO_T3DONE                      00000003
T3GPOL                            00000006
T3GSPM                            00000004
T3GSS0                            00000000
T3GSS1                            00000001
T3GTM                             00000005
T3GVAL                            00000002
T3SYNC                            00000002
T4CKPS0                           00000000
T4CKPS1                           00000001
T4CON                             00000F76
T4OUTPS0                          00000003
T4OUTPS1                          00000004
T4OUTPS2                          00000005
T4OUTPS3                          00000006
TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

TBLPTRU                           00000FF8
TCLKCON                           00000F52
TGEN                              00000004
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1CS0                           00000006
TMR1CS01                          00000006
TMR1CS1                           00000007
TMR1CS11                          00000007
TMR1GE                            00000007
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3CS0                           00000006
TMR3CS1                           00000007
TMR3GE                            00000007
TMR3GIE                           00000001
TMR3GIF                           00000001
TMR3GIP                           00000001
TMR3H                             00000F7B
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000F7A
TMR3ON                            00000000
TMR4                              00000F78
TMR4IE                            00000003
TMR4IF                            00000003
TMR4IP                            00000003
TMR4ON                            00000002
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA5                            00000005
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRMT                              00000001
TRMT1                             00000001
TRMT2                             00000001
TRNIE                             00000003
TRNIF                             00000003
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX1                               00000006
TX1IE                             00000004
TX1IF                             00000004
TX1IP                             00000004
TX2IE                             00000004
TX2IF                             00000004
TX2IP                             00000004
TX8_9                             00000006
TX9                               00000006
TX91                              00000006
TX92                              00000006
TX9D                              00000000
TX9D1                             00000000
TX9D2                             00000000
TXADDRH                           00000F6A
TXADDRL                           00000F6B
TXCKP                             00000004
TXD8                              00000000
TXEN                              00000005
TXEN1                             00000005
TXEN2                             00000005
TXIE                              00000004
TXIF                              00000004
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

TXINC                             00000005
TXIP                              00000004
TXREG                             00000FAE
TXREG1                            00000FAE
TXREG2                            00000FA9
TXSTA                             00000FAD
TXSTA1                            00000FAD
TXSTA2                            00000FA8
U1OD                              00000000
U2OD                              00000001
UA                                00000001
UA1                               00000001
UADDR                             00000F38
UCFG                              00000F39
UCON                              00000F65
UEIE                              00000F37
UEIR                              00000F63
UEP0                              00000F26
UEP1                              00000F27
UEP10                             00000F30
UEP11                             00000F31
UEP12                             00000F32
UEP13                             00000F33
UEP14                             00000F34
UEP15                             00000F35
UEP2                              00000F28
UEP3                              00000F29
UEP4                              00000F2A
UEP5                              00000F2B
UEP6                              00000F2C
UEP7                              00000F2D
UEP8                              00000F2E
UEP9                              00000F2F
UERRIE                            00000001
UERRIF                            00000001
UFRM                              00000F60
UFRMH                             00000F61
UFRML                             00000F60
UIE                               00000F36
UIR                               00000F62
ULPEN                             00000002
ULPLVL                            00000005
ULPSINK                           00000001
ULPWDIS                           00000002
ULPWU                             00000000
UOEMON                            00000006
UPUEN                             00000004
URSTIE                            00000000
URSTIF                            00000000
USBEN                             00000003
USBIE                             00000004
USBIF                             00000004
USBIP                             00000004
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

USTAT                             00000F64
UTEYE                             00000007
UTRDIS                            00000003
VBG2EN                            00000006
VBGEN                             00000007
VCFG0                             00000006
VCFG1                             00000007
VDIRMAG                           00000007
VM                                00000004
VMO                               00000002
VP                                00000005
VPO                               00000003
VREF_MINUS                        00000002
VREF_PLUS                         00000003
W                                 00000000
WCOL                              00000007
WCOL1                             00000007
WDTCON                            00000FC0
WPROG                             00000005
WR                                00000001
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
WUE                               00000001
Z                                 00000002
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_PORTH                            00000F82
_PORTL                            00000F81
_RCSTA2??7                        RCSTA2, 007h
_TRISH                            00000F94
_TRISL                            00000F93
_USBMEMORYADDRESS                 00000400
_Ud                               0000001A
__18F25J50                        00000001
_init                             00000062
_uart_default                     00000074
_uart_pps                         00000086
hserin2done                       00000030
hserin2loop                       00000026
hserindone                        00000010
hserinloop                        00000006
hserout2loop                      00000036
hseroutloop                       00000016
main                              00000062
MPASM 5.75                25J50_PPS_TEST.ASM   8-9-2018  23:24:12         PAGE 50


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXX------------ ----------------
7FC0 : ---------------- ---------------- ---------------- --------XXXXXXXX

All other memory blocks unused.

Program Memory Bytes Used:   164
Program Memory Bytes Free: 32596


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

